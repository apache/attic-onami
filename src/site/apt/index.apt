   ------
   Introduction to Apache Onami Logging
   ------
   The Apache Onami Team
   ------
   2012

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Introduction

  <<Apache Onami Logging>> is a small, light and fast logger Injector, built on
  top of <Google-Guice>, for the well known frameworks:

  * Apache {{{http://logging.apache.org/log4j/2.x}log4j 2}};

  * Apache {{{http://logging.apache.org/log4j/1.2/}log4j}};

  * Apache {{{http://commons.apache.org/logging/}commons-logging}};

  * Java Utils Logging;

  * Simple Logging Facade for Java {{{http://www.slf4j.org/}slf4j}}.

  The concept behind <<Onami Logging>> is that instead of creating Loggers by hand,
  users can let <Guice> creates and injects them automagically, for example
  instead writing:

+--------------------------------------+
import java.util.logging.Logger;
...
Logger logger = Logger.getLogger( getClass().getName() );
...
+--------------------------------------+

  users can easily code:

+--------------------------------------+
import java.util.logging.Logger;
...
@InjectLogger
Logger logger;
...
+--------------------------------------+

  and <<nothing>> more! <<No>> setter methods are needed, just declare it, annotate with <<<@InjectLogger>>>
  annotation let <Onami Logging> doing the rest, <<<final>>> and already set
  Loggers will be skipped and <Onami Logging> won't try to override them at all.
