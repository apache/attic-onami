   ------
   Apache log4j 1.x
   ------
   The Apache Onami Team
   ------
   2012

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Apache log4j 1.x

  Users that want to use the <Apache log4j 1.x> package and let <Guice>
  injects automagically <<<org.apache.log4j.Logger>>> instances, have to add
  the following dependency in the <<<pom.xml>>>:

+--------------------------------------+
<dependency>
  <groupId>org.apache.onami.logging</groupId>
  <artifactId>onami-logging-log4j</artifactId>
  <version>${project.version}</version>
  <scope>compile</scope>
</dependency>
+--------------------------------------+

  then, when creating the <<<com.google.inject.Injector>>>, add the
  <<<org.apache.onami.logging.log4j.Log4jLoggingModule>>> module; please take note
  that users have to specify the classes <<<com.google.inject.matcher.Matcher>>>
  for whom the logging injection has to be applied:

+--------------------------------------+
import com.google.inject.Guice;
import com.google.inject.Injector;

import org.apache.onami.logging.log4j.Log4jLoggingModule;
import com.google.inject.matcher.Matchers;

...

Injector injector = Guice.createInjector( new Log4jLoggingModule( Matchers.any() ),
    ...
);
+--------------------------------------+

  and the magic happens :)
